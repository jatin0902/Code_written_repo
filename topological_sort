#include <bits/stdc++.h> 
void Convert_adj(vector<vector<int>>& adj,vector<vector<int>> &edges,int e)
{
    for(int i=0;i<e;i++)
    {
        adj[edges[i][0]].push_back(edges[i][1]);
    }
    return ;
}
void put_into_ans(vector<int> &ans,stack<int>&s)
{
    while(!s.empty())
    {
        ans.push_back(s.top());
        s.pop();
    }
    return;
}
void DFS(vector<vector<int>> &adj,unordered_map<int,bool> &vis,int val,stack<int> &ans)
{
    for(int i=0;i<adj[val].size();i++)
    {
        if(!vis[adj[val][i]])
        {
            vis[adj[val][i]]=true;
            DFS(adj,vis,adj[val][i],ans);
        }
    }
    ans.push(val);
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    // Write your code here
    unordered_map<int,bool> vis(v+1);
    vector<vector<int>> adj(v+1);
    Convert_adj(adj,edges,e);
    vector<int> ans;
    stack<int> ss;
    for(int i=0;i<v;i++)
    {
        if(!vis[i])
        {
            vis[i]=true;
            DFS(adj,vis,i,ss);
        }
    }
    put_into_ans(ans,ss);
    return ans;
}
